#! /bin/sh

# Static IP assigned to MinkeBox
IP=$1

# MinkeBox storage
VOL=$2
VOL2=$3

# Overrides

if [ "${VOL2}" != "" ]; then
  EXTRA_VOL="--mount type=bind,source=${VOL2},target=/mnt/store,bind-propagation=rshared"
fi

if [ "$(whoami)" != "root" -o "${IP}" = "" -o "${VOL}" = "" ]; then
  echo "Usage: sudo $0 <ip address> <directory for root storage> [<directory for bulk storage>]"
  exit 1
fi

MINKEBOX="registry.minkebox.net/minkebox/minke"

# Fetch MinkeBox if not already downloaded
if [ "$(docker image ls -q ${MINKEBOX})" = "" -o  "$(docker image ls -q ${MINKEBOX}-helper)" = "" ];then
  docker pull ${MINKEBOX}
  docker pull ${MINKEBOX}-helper
fi

if [ "${TZ}" = "" -a -e /etc/timezone ]; then
  TZ=$(cat /etc/timezone)
fi

# Extract information about the host network
default_route=$(ip route get 1.1.1.1 | head -1)
gw=$(echo $default_route | cut -d' ' -f3)
dev=$(echo $default_route | cut -d' ' -f5)
host=$(echo $default_route | cut -d' ' -f7)

# Create a macvlan network called 'home' to use as MinkeBox's home network. There's a little mucking
# around to make sure MinkeBox can talk to the docker host.
if [ ! -e /sys/class/net/home ]; then
  ip link add home link ${dev} type macvlan mode bridge
  ip addr add ${host} dev home
  ip link set home up
  route=$(ip route | grep "dev ${dev} " | grep -v default)
  cidr=$(echo $route | cut -d' ' -f1)
  if [ "${route}" != "" ]; then
    ip route del $(echo $route)
    ip route add ${cidr} dev home
  fi
fi

# Recreate the docker network
docker network rm home > /dev/null
docker network create --driver=macvlan --subnet=${host}/24 --gateway=${gw} -o "parent=home" home > /dev/null

docker container rm minke 2> /dev/null
docker run -d --name minke --privileged --rm \
  -e TZ="${TZ}" \
  --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \
  --mount type=bind,source=${VOL},target=/minke,bind-propagation=rshared \
  ${EXTRA_VOL} \
  --network=home \
  --ip=${IP} \
  ${MINKEBOX} > /dev/null
