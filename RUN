#! /bin/sh

# Static IP assigned to MinkeBox
IP=$1

if [ "${IP}" = "" ]; then
  echo "Please specify an IP address to assign to MinkeBox"
  exit 1
fi

MINKEBOX="registry.minkebox.net/minkebox/minke"

# Fetch if it's now already downloaded
if [ "$(docker image ls -q ${MINKEBOX})" = "" ];then
  docker pull ${MINKEBOX}
fi

# MinkeBox runs onto of it's own network called 'home'. This is bridge to the host network and will be created if
# it doesn't exist.
if [ "$(docker network inspect home 2> /dev/null)" = "[]" ]; then
  default_route=$(ip route get 1.1.1.1 | head -1)
  gw=$(echo $default_route | cut -d' ' -f3)
  dev=$(echo $default_route | cut -d' ' -f5)
  host=$(echo $default_route | cut -d' ' -f7)
  if [ -e /sys/class/net/${dev}/bridge ]; then
    docker network create --driver=bridge --subnet=${host}/24 --gateway=${host} -o "com.docker.network.bridge.name=${dev}" -o "com.docker.network.bridge.enable_ip_masquerade=false" --aux-address="DefaultGatewayIPv4=${gw}" home > /dev/null
  else
    echo "*"
    echo "* The default network device is '${dev}'. It is not a bridging device which is what MinkeBox ideally requires."
    echo "* Creating a macvlan network on '${dev}'. MinkeBox and its applications will have access to everything on the network"
    echo "* *EXCEPT* the host machine. This is a limitation of macvlan."
    echo "*"
    docker network create --driver=macvlan --subnet=${host}/24 --gateway=${gw} -o "com.docker.network.bridge.name=${dev}" -o "com.docker.network.bridge.enable_ip_masquerade=false" -o "parent=${dev}" home > /dev/null
  fi
fi

docker container rm minke > /dev/null 2>&1
docker run --name minke -d --privileged \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /minke:/minke \
  --network=home \
  --ip=${IP} \
  ${MINKEBOX} > /dev/null
docker ps
