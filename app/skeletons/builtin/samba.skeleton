{
  name: `File Share`,
  description: `Share your files on the network using Samba`,
  image: `registry.gitlab.com/minkebox/samba`,
  actions: [
    {
      type: `Header`,
      title: `Create`
    },
    {
      type: `Text`,
      text: `Create a list of file shares. Removing any shares from the list will also <b><u>remove all data</u></b>.`
    },
    {
      type: `File`,
      name: `/etc/extra-shares`,
      style: `Table`,
      description: `Shares`,
      headers: [
        `Name`
      ],
      pattern: `{{0}}`
    },
    {
      type: `Header`,
      title: `Other applications`
    },
    {
      type: `Text`,
      text: `Other applications can offer content they want to share.`
    },
    {
      type: `Shareables`,
      name: `/shareable`,
      description: `Select what to share. You can share using the default name or pick a name that's more meaningful`
    }
  ],
  properties: [
    {
      type: `Directory`,
      name: `/etc/status`
    },
    {
      type: `File`,
      name: `/etc/extra-shares`
    },
    {
      type: `Directory`,
      name: `/myshares`
    },
    {
      type: `Port`,
      name: `137/udp`,
      host: 137,
      protocol: `UDP`,
      nat: false,
      web: false,
      mdns: null
    },
    {
      type: `Port`,
      name: `138/udp`,
      host: 138,
      protocol: `UDP`,
      nat: false,
      web: false,
      mdns: null
    },
    {
      type: `Port`,
      name: `139/tcp`,
      host: 139,
      protocol: `TCP`,
      nat: false,
      web: false,
      mdns: null
    },
    {
      type: `Port`,
      name: `445/tcp`,
      host: 445,
      protocol: `TCP`,
      nat: false,
      web: false,
      mdns: {
        type: `_smb._tcp`
      }
    },
    {
      type: `Port`,
      name: `0/tcp`,
      host: 0,
      protocol: `TCP`,
      nat: false,
      web: false,
      mdns: {
        type: `_device-info._tcp`,
        txt: {
          model: `Xserve`
        }
      }
    },
    {
      type: `Network`,
      name: `primary`,
      defaultValue: `home`
    }
  ],
  monitor: {
    cmd: `cd /shareable;du -d0 *;cd /myshares;du -d0 *`,
    watch: `/shareable`,
    poll: 3600,
    parser: `
      const lines = input.split('\\n');
      
      const labels = [];
      const series = [];
      
      for (let i = 0; i < lines.length && lines[i]; i++) {
        const p = lines[i].split(/\\t+/);
        labels.push(p[1]);
        series.push(parseInt(p[0]));
      }
      
      output.graph = {
        diskspace: {
          type: 'Pie',
          series: series,
          labels: labels
        }
      };
    `,
    template: `{{{graph.diskspace}}}`
  }
}